version: '3.8'

services:
  ubuntu-node-2:
    build:
      context: ./src
      dockerfile: Dockerfile
    container_name: ubuntu-node-2
    environment:
      HOSTNAME: ubuntu-node-2
      IP_LIST: "172.25.0.2,172.25.0.3,172.25.0.4,172.25.0.5"
      IP_LOCAL: 172.25.0.2
      NODE_PORT: 3002
    depends_on:
      postgres:
        condition: service_healthy
      dbadmin:
        condition: service_started
    networks:
      app_network:
        ipv4_address: 172.25.0.2
    ports:
      - "3002:3002"

  ubuntu-node-3:
    build:
      context: ./src
      dockerfile: Dockerfile
    container_name: ubuntu-node-3
    environment:
      HOSTNAME: ubuntu-node-3
      IP_LIST: "172.25.0.2,172.25.0.3,172.25.0.4,172.25.0.5"
      IP_LOCAL: 172.25.0.3
      NODE_PORT: 3003
    depends_on:
      postgres:
        condition: service_healthy
      dbadmin:
        condition: service_started
    networks:
      app_network:
        ipv4_address: 172.25.0.3
    ports:
      - "3003:3003"

  ubuntu-node-4:
    build:
      context: ./src
      dockerfile: Dockerfile
    container_name: ubuntu-node-4
    environment:
      HOSTNAME: ubuntu-node-4
      IP_LIST: "172.25.0.2,172.25.0.3,172.25.0.4,172.25.0.5"
      IP_LOCAL: 172.25.0.4
      NODE_PORT: 3004
    depends_on:
      postgres:
        condition: service_healthy
      dbadmin:
        condition: service_started
    networks:
      app_network:
        ipv4_address: 172.25.0.4
    ports:
      - "3004:3004"

  ubuntu-node-5:
    build:
      context: ./src
      dockerfile: Dockerfile
    container_name: ubuntu-node-5
    environment:
      HOSTNAME: ubuntu-node-5
      IP_LIST: "172.25.0.2,172.25.0.3,172.25.0.4,172.25.0.5"
      IP_LOCAL: 172.25.0.5
      NODE_PORT: 3005
    depends_on:
      postgres:
        condition: service_healthy
      dbadmin:
        condition: service_started
    networks:
      app_network:
        ipv4_address: 172.25.0.5
    ports:
      - "3005:3005"
  
  postgres:
    image: postgres:latest
    container_name: postgres
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: distributed_systems_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    networks:
      app_network:
        ipv4_address: 172.25.0.6
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d distributed_systems_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  dbadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: pgadmin4
    ports:
      - 5050:80
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: pgadmin4
    depends_on:
      - postgres
    networks:
      app_network:
        ipv4_address: 172.25.0.7
    healthcheck:
      test: ["CMD-SHELL", "pg_isready u 172.25.0.2 -p 5432 -U user"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16

volumes:
  db_data:
